console.log('start') // 1

setTimeout(() => {
  console.log('setTimeout') // 4
})

Promise.resolve().then(() => {
  console.log('resolve') // 3
})

console.log('end') // 2

/*
Обычно мы делим весь транспорт на две категории:

    Общие транспортные средства.

    Транспортные средства для чрезвычайных ситуаций. Например, пожарные машины и машины скорой помощи.

Чтобы проехать многолюдные перекрестки, мы пропустим первыми пожарные машины и машины скорой помощи. Автомобили скорой помощи имеют приоритет выше, чем другой транспорт. Ключевое слово: приоритеты.
 В JavaScript EventLoop также есть понятие приоритета.

    Задачи с более высоким приоритетом называются микрозадачами. Например: Promise, ObjectObserver, MutationObserver, process.nextTick, async/await.

    Задачи с более низким приоритетом называются макрозадачами. Например: setTimeout, setInterval и XHR.

    Микрозадачи выполняются в порядке очереди, а макрозадачи выполняются в порядке очереди внутри микрозадач.
    
Хотя setTimeout и Promise.resolve() выполняются одновременно, и даже код setTimeout еще впереди, но из-за низкого приоритета относящаяся к нему коллбэк-функция выполняется позже.
*/