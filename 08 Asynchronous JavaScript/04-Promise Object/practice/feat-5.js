console.log('start')  // 1

const fn = () => (new Promise((resolve, reject) => {
  console.log(1);  // 3
  resolve('success')
}))

console.log('middle')  // 2

fn().then(res => {
  console.log(res)  // 5
})

console.log('end'); // 4

/*
Этот код преднамеренно добавляет функцию, чтобы запутать испытуемых, то есть нас, и это fn.

Пожалуйста, помните, что независимо от того, сколько существует слоев вызовов функций, наши базовые принципы остаются неизменными:

    Сначала выполняется синхронный код, а затем асинхронный.

    Синхронный код выполняется в том порядке, в котором он был вызван.
*/